import {ThemeProp} from 'react-native-paper/lib/typescript/types';
import {MD3LightTheme as DefaultTheme} from 'react-native-paper';
/*

  Color Palletes

  EVA 01: https://www.color-hex.com/color-palette/43957
  EVA 02: https://www.color-hex.com/color-palette/25527
 */

// https://callstack.github.io/react-native-paper/docs/guides/theming/

/**
 * EVA 01 colors
 */
const eva01Light = {
  primary: 'rgb(0, 109, 60)',
  onPrimary: 'rgb(255, 255, 255)',
  primaryContainer: 'rgb(152, 247, 182)',
  onPrimaryContainer: 'rgb(0, 33, 14)',
  secondary: 'rgb(54, 107, 0)',
  onSecondary: 'rgb(255, 255, 255)',
  secondaryContainer: 'rgb(171, 247, 110)',
  onSecondaryContainer: 'rgb(12, 32, 0)',
  tertiary: 'rgb(121, 66, 182)',
  onTertiary: 'rgb(255, 255, 255)',
  tertiaryContainer: 'rgb(239, 219, 255)',
  onTertiaryContainer: 'rgb(43, 0, 82)',
  error: 'rgb(186, 26, 26)',
  onError: 'rgb(255, 255, 255)',
  errorContainer: 'rgb(255, 218, 214)',
  onErrorContainer: 'rgb(65, 0, 2)',
  background: 'rgb(251, 253, 248)',
  onBackground: 'rgb(25, 28, 25)',
  surface: 'rgb(251, 253, 248)',
  onSurface: 'rgb(25, 28, 25)',
  surfaceVariant: 'rgb(220, 229, 219)',
  onSurfaceVariant: 'rgb(65, 73, 66)',
  outline: 'rgb(113, 121, 113)',
  outlineVariant: 'rgb(192, 201, 191)',
  shadow: 'rgb(0, 0, 0)',
  scrim: 'rgb(0, 0, 0)',
  inverseSurface: 'rgb(46, 49, 46)',
  inverseOnSurface: 'rgb(240, 241, 236)',
  inversePrimary: 'rgb(124, 218, 156)',
  elevation: {
    level0: 'transparent',
    level1: 'rgb(238, 246, 239)',
    level2: 'rgb(231, 242, 233)',
    level3: 'rgb(223, 237, 227)',
    level4: 'rgb(221, 236, 225)',
    level5: 'rgb(216, 233, 222)',
  },
  surfaceDisabled: 'rgba(25, 28, 25, 0.12)',
  onSurfaceDisabled: 'rgba(25, 28, 25, 0.38)',
  backdrop: 'rgba(43, 50, 44, 0.4)',
  purple: 'rgb(115, 76, 158)',
  onPurple: 'rgb(255, 255, 255)',
  purpleContainer: 'rgb(239, 219, 255)',
  onPurpleContainer: 'rgb(43, 0, 82)',
};

const eva01Dark = {
  primary: 'rgb(124, 218, 156)',
  onPrimary: 'rgb(0, 57, 29)',
  primaryContainer: 'rgb(0, 82, 44)',
  onPrimaryContainer: 'rgb(152, 247, 182)',
  secondary: 'rgb(144, 218, 85)',
  onSecondary: 'rgb(25, 56, 0)',
  secondaryContainer: 'rgb(39, 80, 0)',
  onSecondaryContainer: 'rgb(171, 247, 110)',
  tertiary: 'rgb(219, 184, 255)',
  onTertiary: 'rgb(71, 0, 131)',
  tertiaryContainer: 'rgb(96, 38, 156)',
  onTertiaryContainer: 'rgb(239, 219, 255)',
  error: 'rgb(255, 180, 171)',
  onError: 'rgb(105, 0, 5)',
  errorContainer: 'rgb(147, 0, 10)',
  onErrorContainer: 'rgb(255, 180, 171)',
  background: 'rgb(25, 28, 25)',
  onBackground: 'rgb(225, 227, 222)',
  surface: 'rgb(25, 28, 25)',
  onSurface: 'rgb(225, 227, 222)',
  surfaceVariant: 'rgb(65, 73, 66)',
  onSurfaceVariant: 'rgb(192, 201, 191)',
  outline: 'rgb(139, 147, 138)',
  outlineVariant: 'rgb(65, 73, 66)',
  shadow: 'rgb(0, 0, 0)',
  scrim: 'rgb(0, 0, 0)',
  inverseSurface: 'rgb(225, 227, 222)',
  inverseOnSurface: 'rgb(46, 49, 46)',
  inversePrimary: 'rgb(0, 109, 60)',
  elevation: {
    level0: 'transparent',
    level1: 'rgb(30, 38, 32)',
    level2: 'rgb(33, 43, 36)',
    level3: 'rgb(36, 49, 39)',
    level4: 'rgb(37, 51, 41)',
    level5: 'rgb(39, 55, 43)',
  },
  surfaceDisabled: 'rgba(225, 227, 222, 0.12)',
  onSurfaceDisabled: 'rgba(225, 227, 222, 0.38)',
  backdrop: 'rgba(43, 50, 44, 0.4)',
};

/**
 * EVA 01 colors with customs
 */
const customColorsEva01LightModified = {
  primary: 'rgb(0, 109, 60)',
  onPrimary: 'rgb(255, 255, 255)',
  primaryContainer: 'rgb(152, 247, 182)',
  onPrimaryContainer: 'rgb(0, 33, 14)',
  secondary: 'rgb(54, 107, 0)',
  onSecondary: 'rgb(255, 255, 255)',
  secondaryContainer: 'rgb(171, 247, 110)',
  onSecondaryContainer: 'rgb(12, 32, 0)',
  tertiary: 'rgb(121, 66, 182)',
  onTertiary: 'rgb(255, 255, 255)',
  tertiaryContainer: 'rgb(239, 219, 255)',
  onTertiaryContainer: 'rgb(43, 0, 82)',
  error: 'rgb(186, 26, 26)',
  onError: 'rgb(255, 255, 255)',
  errorContainer: 'rgb(255, 218, 214)',
  onErrorContainer: 'rgb(65, 0, 2)',
  background: 'rgb(251, 253, 248)',
  onBackground: 'rgb(25, 28, 25)',
  surface: 'rgb(251, 253, 248)',
  onSurface: 'rgb(25, 28, 25)',
  surfaceVariant: 'rgb(220, 229, 219)',
  onSurfaceVariant: 'rgb(65, 73, 66)',
  outline: 'rgb(113, 121, 113)',
  outlineVariant: 'rgb(192, 201, 191)',
  shadow: 'rgb(0, 0, 0)',
  scrim: 'rgb(0, 0, 0)',
  inverseSurface: 'rgb(46, 49, 46)',
  inverseOnSurface: 'rgb(240, 241, 236)',
  inversePrimary: 'rgb(124, 218, 156)',
  elevation: {
    level0: 'transparent',
    level1: 'rgb(238, 246, 239)',
    level2: 'rgb(231, 242, 233)',
    level3: 'rgb(223, 237, 227)',
    level4: 'rgb(221, 236, 225)',
    level5: 'rgb(216, 233, 222)',
  },
  surfaceDisabled: 'rgba(25, 28, 25, 0.12)',
  onSurfaceDisabled: 'rgba(25, 28, 25, 0.38)',
  backdrop: 'rgba(43, 50, 44, 0.4)',
  purple: 'rgb(115, 76, 158)',
  onPurple: 'rgb(255, 255, 255)',
  purpleContainer: 'rgb(239, 219, 255)',
  onPurpleContainer: 'rgb(43, 0, 82)',
};

const eva01DarkInverted = {
  primary: 'rgb(219, 184, 255)',
  onPrimary: 'rgb(66, 26, 108)',
  primaryContainer: 'rgb(90, 51, 132)',
  onPrimaryContainer: 'rgb(239, 219, 255)',
  secondary: 'rgb(144, 218, 85)',
  onSecondary: 'rgb(25, 56, 0)',
  secondaryContainer: 'rgb(39, 80, 0)',
  onSecondaryContainer: 'rgb(171, 247, 110)',
  tertiary: 'rgb(124, 218, 156)',
  onTertiary: 'rgb(0, 57, 29)',
  tertiaryContainer: 'rgb(0, 82, 44)',
  onTertiaryContainer: 'rgb(152, 247, 182)',
  error: 'rgb(255, 180, 171)',
  onError: 'rgb(105, 0, 5)',
  errorContainer: 'rgb(147, 0, 10)',
  onErrorContainer: 'rgb(255, 180, 171)',
  background: 'rgb(29, 27, 30)',
  onBackground: 'rgb(231, 225, 229)',
  surface: 'rgb(29, 27, 30)',
  onSurface: 'rgb(231, 225, 229)',
  surfaceVariant: 'rgb(74, 69, 78)',
  onSurfaceVariant: 'rgb(204, 196, 207)',
  outline: 'rgb(149, 142, 152)',
  outlineVariant: 'rgb(74, 69, 78)',
  shadow: 'rgb(0, 0, 0)',
  scrim: 'rgb(0, 0, 0)',
  inverseSurface: 'rgb(231, 225, 229)',
  inverseOnSurface: 'rgb(50, 47, 51)',
  inversePrimary: 'rgb(115, 76, 158)',
  elevation: {
    level0: 'transparent',
    level1: 'rgb(39, 35, 41)',
    level2: 'rgb(44, 40, 48)',
    level3: 'rgb(50, 44, 55)',
    level4: 'rgb(52, 46, 57)',
    level5: 'rgb(56, 49, 62)',
  },
  surfaceDisabled: 'rgba(231, 225, 229, 0.12)',
  onSurfaceDisabled: 'rgba(231, 225, 229, 0.38)',
  backdrop: 'rgba(51, 47, 55, 0.4)',
};

const eva02ColorsLight = {
  primary: 'rgb(190, 10, 13)',
  onPrimary: 'rgb(255, 255, 255)',
  primaryContainer: 'rgb(255, 218, 213)',
  onPrimaryContainer: 'rgb(65, 0, 1)',
  secondary: 'rgb(146, 76, 0)',
  onSecondary: 'rgb(255, 255, 255)',
  secondaryContainer: 'rgb(255, 220, 196)',
  onSecondaryContainer: 'rgb(47, 20, 0)',
  tertiary: 'rgb(0, 104, 116)',
  onTertiary: 'rgb(255, 255, 255)',
  tertiaryContainer: 'rgb(151, 240, 255)',
  onTertiaryContainer: 'rgb(0, 31, 36)',
  error: 'rgb(186, 26, 26)',
  onError: 'rgb(255, 255, 255)',
  errorContainer: 'rgb(255, 218, 214)',
  onErrorContainer: 'rgb(65, 0, 2)',
  background: 'rgb(255, 251, 255)',
  onBackground: 'rgb(32, 26, 25)',
  surface: 'rgb(255, 251, 255)',
  onSurface: 'rgb(32, 26, 25)',
  surfaceVariant: 'rgb(245, 221, 218)',
  onSurfaceVariant: 'rgb(83, 67, 65)',
  outline: 'rgb(133, 115, 112)',
  outlineVariant: 'rgb(216, 194, 190)',
  shadow: 'rgb(0, 0, 0)',
  scrim: 'rgb(0, 0, 0)',
  inverseSurface: 'rgb(54, 47, 46)',
  inverseOnSurface: 'rgb(251, 238, 236)',
  inversePrimary: 'rgb(255, 180, 169)',
  elevation: {
    level0: 'transparent',
    level1: 'rgb(252, 239, 243)',
    level2: 'rgb(250, 232, 236)',
    level3: 'rgb(248, 225, 228)',
    level4: 'rgb(247, 222, 226)',
    level5: 'rgb(246, 217, 221)',
  },
  surfaceDisabled: 'rgba(32, 26, 25, 0.12)',
  onSurfaceDisabled: 'rgba(32, 26, 25, 0.38)',
  backdrop: 'rgba(59, 45, 43, 0.4)',
};

const eva02ColorsDark = {
  primary: 'rgb(231, 180, 255)',
  onPrimary: 'rgb(74, 23, 101)',
  primaryContainer: 'rgb(98, 48, 125)',
  onPrimaryContainer: 'rgb(246, 217, 255)',
  secondary: 'rgb(255, 180, 170)',
  onSecondary: 'rgb(105, 0, 4)',
  secondaryContainer: 'rgb(147, 0, 9)',
  onSecondaryContainer: 'rgb(255, 218, 213)',
  tertiary: 'rgb(255, 179, 178)',
  onTertiary: 'rgb(95, 19, 26)',
  tertiaryContainer: 'rgb(126, 42, 46)',
  onTertiaryContainer: 'rgb(255, 218, 217)',
  error: 'rgb(255, 180, 171)',
  onError: 'rgb(105, 0, 5)',
  errorContainer: 'rgb(147, 0, 10)',
  onErrorContainer: 'rgb(255, 180, 171)',
  background: 'rgb(29, 27, 30)',
  onBackground: 'rgb(232, 224, 229)',
  surface: 'rgb(29, 27, 30)',
  onSurface: 'rgb(232, 224, 229)',
  surfaceVariant: 'rgb(75, 68, 77)',
  onSurfaceVariant: 'rgb(206, 195, 206)',
  outline: 'rgb(151, 142, 152)',
  outlineVariant: 'rgb(75, 68, 77)',
  shadow: 'rgb(0, 0, 0)',
  scrim: 'rgb(0, 0, 0)',
  inverseSurface: 'rgb(232, 224, 229)',
  inverseOnSurface: 'rgb(51, 47, 51)',
  inversePrimary: 'rgb(124, 73, 151)',
  elevation: {
    level0: 'transparent',
    level1: 'rgb(39, 35, 41)',
    level2: 'rgb(45, 39, 48)',
    level3: 'rgb(51, 44, 55)',
    level4: 'rgb(53, 45, 57)',
    level5: 'rgb(57, 48, 62)',
  },
  surfaceDisabled: 'rgba(232, 224, 229, 0.12)',
  onSurfaceDisabled: 'rgba(232, 224, 229, 0.38)',
  backdrop: 'rgba(53, 46, 54, 0.4)',
};

const defaultColorsLight = {
  primary: 'rgb(120, 69, 172)',
  onPrimary: 'rgb(255, 255, 255)',
  primaryContainer: 'rgb(240, 219, 255)',
  onPrimaryContainer: 'rgb(44, 0, 81)',
  secondary: 'rgb(102, 90, 111)',
  onSecondary: 'rgb(255, 255, 255)',
  secondaryContainer: 'rgb(237, 221, 246)',
  onSecondaryContainer: 'rgb(33, 24, 42)',
  tertiary: 'rgb(128, 81, 88)',
  onTertiary: 'rgb(255, 255, 255)',
  tertiaryContainer: 'rgb(255, 217, 221)',
  onTertiaryContainer: 'rgb(50, 16, 23)',
  error: 'rgb(186, 26, 26)',
  onError: 'rgb(255, 255, 255)',
  errorContainer: 'rgb(255, 218, 214)',
  onErrorContainer: 'rgb(65, 0, 2)',
  background: 'rgb(255, 251, 255)',
  onBackground: 'rgb(29, 27, 30)',
  surface: 'rgb(255, 251, 255)',
  onSurface: 'rgb(29, 27, 30)',
  surfaceVariant: 'rgb(233, 223, 235)',
  onSurfaceVariant: 'rgb(74, 69, 78)',
  outline: 'rgb(124, 117, 126)',
  outlineVariant: 'rgb(204, 196, 206)',
  shadow: 'rgb(0, 0, 0)',
  scrim: 'rgb(0, 0, 0)',
  inverseSurface: 'rgb(50, 47, 51)',
  inverseOnSurface: 'rgb(245, 239, 244)',
  inversePrimary: 'rgb(220, 184, 255)',
  elevation: {
    level0: 'transparent',
    level1: 'rgb(248, 242, 251)',
    level2: 'rgb(244, 236, 248)',
    level3: 'rgb(240, 231, 246)',
    level4: 'rgb(239, 229, 245)',
    level5: 'rgb(236, 226, 243)',
  },
  surfaceDisabled: 'rgba(29, 27, 30, 0.12)',
  onSurfaceDisabled: 'rgba(29, 27, 30, 0.38)',
  backdrop: 'rgba(51, 47, 55, 0.4)',
};

const defaultDark = {
  primary: 'rgb(220, 184, 255)',
  onPrimary: 'rgb(71, 12, 122)',
  primaryContainer: 'rgb(95, 43, 146)',
  onPrimaryContainer: 'rgb(240, 219, 255)',
  secondary: 'rgb(208, 193, 218)',
  onSecondary: 'rgb(54, 44, 63)',
  secondaryContainer: 'rgb(77, 67, 87)',
  onSecondaryContainer: 'rgb(237, 221, 246)',
  tertiary: 'rgb(243, 183, 190)',
  onTertiary: 'rgb(75, 37, 43)',
  tertiaryContainer: 'rgb(101, 58, 65)',
  onTertiaryContainer: 'rgb(255, 217, 221)',
  error: 'rgb(255, 180, 171)',
  onError: 'rgb(105, 0, 5)',
  errorContainer: 'rgb(147, 0, 10)',
  onErrorContainer: 'rgb(255, 180, 171)',
  background: 'rgb(29, 27, 30)',
  onBackground: 'rgb(231, 225, 229)',
  surface: 'rgb(29, 27, 30)',
  onSurface: 'rgb(231, 225, 229)',
  surfaceVariant: 'rgb(74, 69, 78)',
  onSurfaceVariant: 'rgb(204, 196, 206)',
  outline: 'rgb(150, 142, 152)',
  outlineVariant: 'rgb(74, 69, 78)',
  shadow: 'rgb(0, 0, 0)',
  scrim: 'rgb(0, 0, 0)',
  inverseSurface: 'rgb(231, 225, 229)',
  inverseOnSurface: 'rgb(50, 47, 51)',
  inversePrimary: 'rgb(120, 69, 172)',
  elevation: {
    level0: 'transparent',
    level1: 'rgb(39, 35, 41)',
    level2: 'rgb(44, 40, 48)',
    level3: 'rgb(50, 44, 55)',
    level4: 'rgb(52, 46, 57)',
    level5: 'rgb(56, 49, 62)',
  },
  surfaceDisabled: 'rgba(231, 225, 229, 0.12)',
  onSurfaceDisabled: 'rgba(231, 225, 229, 0.38)',
  backdrop: 'rgba(51, 47, 55, 0.4)',
};

const candyLight = {
  primary: 'rgb(176, 46, 0)',
  onPrimary: 'rgb(255, 255, 255)',
  primaryContainer: 'rgb(255, 219, 209)',
  onPrimaryContainer: 'rgb(59, 9, 0)',
  secondary: 'rgb(150, 73, 0)',
  onSecondary: 'rgb(255, 255, 255)',
  secondaryContainer: 'rgb(255, 220, 198)',
  onSecondaryContainer: 'rgb(49, 19, 0)',
  tertiary: 'rgb(0, 95, 175)',
  onTertiary: 'rgb(255, 255, 255)',
  tertiaryContainer: 'rgb(212, 227, 255)',
  onTertiaryContainer: 'rgb(0, 28, 58)',
  error: 'rgb(186, 26, 26)',
  onError: 'rgb(255, 255, 255)',
  errorContainer: 'rgb(255, 218, 214)',
  onErrorContainer: 'rgb(65, 0, 2)',
  background: 'rgb(255, 251, 255)',
  onBackground: 'rgb(32, 26, 24)',
  surface: 'rgb(255, 251, 255)',
  onSurface: 'rgb(32, 26, 24)',
  surfaceVariant: 'rgb(245, 222, 216)',
  onSurfaceVariant: 'rgb(83, 67, 63)',
  outline: 'rgb(133, 115, 110)',
  outlineVariant: 'rgb(216, 194, 188)',
  shadow: 'rgb(0, 0, 0)',
  scrim: 'rgb(0, 0, 0)',
  inverseSurface: 'rgb(54, 47, 45)',
  inverseOnSurface: 'rgb(251, 238, 235)',
  inversePrimary: 'rgb(255, 181, 160)',
  elevation: {
    level0: 'transparent',
    level1: 'rgb(251, 241, 242)',
    level2: 'rgb(249, 235, 235)',
    level3: 'rgb(246, 229, 227)',
    level4: 'rgb(246, 226, 224)',
    level5: 'rgb(244, 222, 219)',
  },
  surfaceDisabled: 'rgba(32, 26, 24, 0.12)',
  onSurfaceDisabled: 'rgba(32, 26, 24, 0.38)',
  backdrop: 'rgba(59, 45, 41, 0.4)',
};

const candyDark = {
  primary: 'rgb(255, 181, 160)',
  onPrimary: 'rgb(96, 21, 0)',
  primaryContainer: 'rgb(135, 33, 0)',
  onPrimaryContainer: 'rgb(255, 219, 209)',
  secondary: 'rgb(255, 183, 134)',
  onSecondary: 'rgb(80, 36, 0)',
  secondaryContainer: 'rgb(114, 54, 0)',
  onSecondaryContainer: 'rgb(255, 220, 198)',
  tertiary: 'rgb(165, 200, 255)',
  onTertiary: 'rgb(0, 49, 95)',
  tertiaryContainer: 'rgb(0, 71, 134)',
  onTertiaryContainer: 'rgb(212, 227, 255)',
  error: 'rgb(255, 180, 171)',
  onError: 'rgb(105, 0, 5)',
  errorContainer: 'rgb(147, 0, 10)',
  onErrorContainer: 'rgb(255, 180, 171)',
  background: 'rgb(32, 26, 24)',
  onBackground: 'rgb(237, 224, 221)',
  surface: 'rgb(32, 26, 24)',
  onSurface: 'rgb(237, 224, 221)',
  surfaceVariant: 'rgb(83, 67, 63)',
  onSurfaceVariant: 'rgb(216, 194, 188)',
  outline: 'rgb(160, 140, 135)',
  outlineVariant: 'rgb(83, 67, 63)',
  shadow: 'rgb(0, 0, 0)',
  scrim: 'rgb(0, 0, 0)',
  inverseSurface: 'rgb(237, 224, 221)',
  inverseOnSurface: 'rgb(54, 47, 45)',
  inversePrimary: 'rgb(176, 46, 0)',
  elevation: {
    level0: 'transparent',
    level1: 'rgb(43, 34, 31)',
    level2: 'rgb(50, 38, 35)',
    level3: 'rgb(57, 43, 39)',
    level4: 'rgb(59, 45, 40)',
    level5: 'rgb(63, 48, 43)',
  },
  surfaceDisabled: 'rgba(237, 224, 221, 0.12)',
  onSurfaceDisabled: 'rgba(237, 224, 221, 0.38)',
  backdrop: 'rgba(59, 45, 41, 0.4)',
};

const natureLight = {
  primary: 'rgb(0, 95, 175)',
  onPrimary: 'rgb(255, 255, 255)',
  primaryContainer: 'rgb(212, 227, 255)',
  onPrimaryContainer: 'rgb(0, 28, 58)',
  secondary: 'rgb(56, 107, 1)',
  onSecondary: 'rgb(255, 255, 255)',
  secondaryContainer: 'rgb(183, 244, 129)',
  onSecondaryContainer: 'rgb(13, 32, 0)',
  tertiary: 'rgb(0, 99, 154)',
  onTertiary: 'rgb(255, 255, 255)',
  tertiaryContainer: 'rgb(206, 229, 255)',
  onTertiaryContainer: 'rgb(0, 29, 50)',
  error: 'rgb(186, 26, 26)',
  onError: 'rgb(255, 255, 255)',
  errorContainer: 'rgb(255, 218, 214)',
  onErrorContainer: 'rgb(65, 0, 2)',
  background: 'rgb(253, 252, 255)',
  onBackground: 'rgb(26, 28, 30)',
  surface: 'rgb(253, 252, 255)',
  onSurface: 'rgb(26, 28, 30)',
  surfaceVariant: 'rgb(224, 226, 236)',
  onSurfaceVariant: 'rgb(67, 71, 78)',
  outline: 'rgb(116, 119, 127)',
  outlineVariant: 'rgb(195, 198, 207)',
  shadow: 'rgb(0, 0, 0)',
  scrim: 'rgb(0, 0, 0)',
  inverseSurface: 'rgb(47, 48, 51)',
  inverseOnSurface: 'rgb(241, 240, 244)',
  inversePrimary: 'rgb(165, 200, 255)',
  elevation: {
    level0: 'transparent',
    level1: 'rgb(240, 244, 251)',
    level2: 'rgb(233, 239, 249)',
    level3: 'rgb(225, 235, 246)',
    level4: 'rgb(223, 233, 245)',
    level5: 'rgb(218, 230, 244)',
  },
  surfaceDisabled: 'rgba(26, 28, 30, 0.12)',
  onSurfaceDisabled: 'rgba(26, 28, 30, 0.38)',
  backdrop: 'rgba(45, 49, 56, 0.4)',
};

const natureDark = {
  primary: 'rgb(165, 200, 255)',
  onPrimary: 'rgb(0, 49, 95)',
  primaryContainer: 'rgb(0, 71, 134)',
  onPrimaryContainer: 'rgb(212, 227, 255)',
  secondary: 'rgb(156, 215, 105)',
  onSecondary: 'rgb(26, 55, 0)',
  secondaryContainer: 'rgb(40, 80, 0)',
  onSecondaryContainer: 'rgb(183, 244, 129)',
  tertiary: 'rgb(150, 204, 255)',
  onTertiary: 'rgb(0, 51, 83)',
  tertiaryContainer: 'rgb(0, 74, 117)',
  onTertiaryContainer: 'rgb(206, 229, 255)',
  error: 'rgb(255, 180, 171)',
  onError: 'rgb(105, 0, 5)',
  errorContainer: 'rgb(147, 0, 10)',
  onErrorContainer: 'rgb(255, 180, 171)',
  background: 'rgb(26, 28, 30)',
  onBackground: 'rgb(227, 226, 230)',
  surface: 'rgb(26, 28, 30)',
  onSurface: 'rgb(227, 226, 230)',
  surfaceVariant: 'rgb(67, 71, 78)',
  onSurfaceVariant: 'rgb(195, 198, 207)',
  outline: 'rgb(141, 145, 153)',
  outlineVariant: 'rgb(67, 71, 78)',
  shadow: 'rgb(0, 0, 0)',
  scrim: 'rgb(0, 0, 0)',
  inverseSurface: 'rgb(227, 226, 230)',
  inverseOnSurface: 'rgb(47, 48, 51)',
  inversePrimary: 'rgb(0, 95, 175)',
  elevation: {
    level0: 'transparent',
    level1: 'rgb(33, 37, 41)',
    level2: 'rgb(37, 42, 48)',
    level3: 'rgb(41, 47, 55)',
    level4: 'rgb(43, 49, 57)',
    level5: 'rgb(46, 52, 62)',
  },
  surfaceDisabled: 'rgba(227, 226, 230, 0.12)',
  onSurfaceDisabled: 'rgba(227, 226, 230, 0.38)',
  backdrop: 'rgba(45, 49, 56, 0.4)',
};

const fullyCustomDark = {
  primary: 'rgb(220, 184, 255)',
  onPrimary: 'rgb(71, 12, 122)',
  primaryContainer: 'rgb(95, 43, 146)',
  onPrimaryContainer: 'rgb(240, 219, 255)',
  secondary: 'rgb(208, 193, 218)',
  onSecondary: 'rgb(54, 44, 63)',
  secondaryContainer: 'rgb(77, 67, 87)',
  onSecondaryContainer: 'rgb(237, 221, 246)',
  tertiary: 'rgb(243, 183, 190)',
  onTertiary: 'rgb(75, 37, 43)',
  tertiaryContainer: 'rgb(101, 58, 65)',
  onTertiaryContainer: 'rgb(255, 217, 221)',
  error: 'rgb(255, 180, 171)',
  onError: 'rgb(105, 0, 5)',
  errorContainer: 'rgb(147, 0, 10)',
  onErrorContainer: 'rgb(255, 180, 171)',
  background: 'rgb(29, 27, 30)',
  onBackground: 'rgb(231, 225, 229)',
  surface: 'rgb(29, 27, 30)',
  onSurface: 'rgb(231, 225, 229)',
  surfaceVariant: 'rgb(74, 69, 78)',
  onSurfaceVariant: 'rgb(204, 196, 206)',
  outline: 'rgb(150, 142, 152)',
  outlineVariant: 'rgb(74, 69, 78)',
  shadow: 'rgb(0, 0, 0)',
  scrim: 'rgb(0, 0, 0)',
  inverseSurface: 'rgb(231, 225, 229)',
  inverseOnSurface: 'rgb(50, 47, 51)',
  inversePrimary: 'rgb(120, 69, 172)',
  elevation: {
    level0: 'transparent',
    level1: 'rgb(39, 35, 41)',
    level2: 'rgb(44, 40, 48)',
    level3: 'rgb(50, 44, 55)',
    level4: 'rgb(52, 46, 57)',
    level5: 'rgb(56, 49, 62)',
  },
  surfaceDisabled: 'rgba(231, 225, 229, 0.12)',
  onSurfaceDisabled: 'rgba(231, 225, 229, 0.38)',
  backdrop: 'rgba(51, 47, 55, 0.4)',
};

const fullyCustomLight = {
  primary: 'rgb(120, 69, 172)',
  onPrimary: 'rgb(255, 255, 255)',
  primaryContainer: 'rgb(240, 219, 255)',
  onPrimaryContainer: 'rgb(44, 0, 81)',
  secondary: 'rgb(102, 90, 111)',
  onSecondary: 'rgb(255, 255, 255)',
  secondaryContainer: 'rgb(237, 221, 246)',
  onSecondaryContainer: 'rgb(33, 24, 42)',
  tertiary: 'rgb(128, 81, 88)',
  onTertiary: 'rgb(255, 255, 255)',
  tertiaryContainer: 'rgb(255, 217, 221)',
  onTertiaryContainer: 'rgb(50, 16, 23)',
  error: 'rgb(186, 26, 26)',
  onError: 'rgb(255, 255, 255)',
  errorContainer: 'rgb(255, 218, 214)',
  onErrorContainer: 'rgb(65, 0, 2)',
  background: 'rgb(255, 251, 255)',
  onBackground: 'rgb(29, 27, 30)',
  surface: 'rgb(255, 251, 255)',
  onSurface: 'rgb(29, 27, 30)',
  surfaceVariant: 'rgb(233, 223, 235)',
  onSurfaceVariant: 'rgb(74, 69, 78)',
  outline: 'rgb(124, 117, 126)',
  outlineVariant: 'rgb(204, 196, 206)',
  shadow: 'rgb(0, 0, 0)',
  scrim: 'rgb(0, 0, 0)',
  inverseSurface: 'rgb(50, 47, 51)',
  inverseOnSurface: 'rgb(245, 239, 244)',
  inversePrimary: 'rgb(220, 184, 255)',
  elevation: {
    level0: 'transparent',
    level1: 'rgb(248, 242, 251)',
    level2: 'rgb(244, 236, 248)',
    level3: 'rgb(240, 231, 246)',
    level4: 'rgb(239, 229, 245)',
    level5: 'rgb(236, 226, 243)',
  },
  surfaceDisabled: 'rgba(29, 27, 30, 0.12)',
  onSurfaceDisabled: 'rgba(29, 27, 30, 0.38)',
  backdrop: 'rgba(51, 47, 55, 0.4)',
};

const theme: ThemeProp = {
  dark: false,
  version: 3,
  mode: 'exact',
  colors: eva02ColorsLight,
};
export default DefaultTheme;
