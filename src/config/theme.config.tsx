import {ThemeProp} from 'react-native-paper/lib/typescript/types';
import {
  MD3LightTheme as DefaultTheme,
  MD3DarkTheme as DefaultDark,
} from 'react-native-paper';

// https://callstack.github.io/react-native-paper/docs/guides/theming/

const theme: ThemeProp = {
  dark: false,
  version: 3,
  mode: 'exact',
  colors: {
    primary: 'rgb(192, 0, 15)',
    onPrimary: 'rgb(255, 255, 255)',
    primaryContainer: 'rgb(255, 218, 213)',
    onPrimaryContainer: 'rgb(65, 0, 2)',
    secondary: 'rgb(124, 73, 151)',
    onSecondary: 'rgb(255, 255, 255)',
    secondaryContainer: 'rgb(246, 217, 255)',
    onSecondaryContainer: 'rgb(48, 0, 73)',
    tertiary: 'rgb(149, 74, 0)',
    onTertiary: 'rgb(255, 255, 255)',
    tertiaryContainer: 'rgb(255, 220, 198)',
    onTertiaryContainer: 'rgb(48, 20, 0)',
    error: 'rgb(186, 26, 26)',
    onError: 'rgb(255, 255, 255)',
    errorContainer: 'rgb(255, 218, 214)',
    onErrorContainer: 'rgb(65, 0, 2)',
    background: 'rgb(255, 251, 255)',
    onBackground: 'rgb(32, 26, 25)',
    surface: 'rgb(255, 251, 255)',
    onSurface: 'rgb(32, 26, 25)',
    surfaceVariant: 'rgb(245, 221, 218)',
    onSurfaceVariant: 'rgb(83, 67, 65)',
    outline: 'rgb(133, 115, 112)',
    outlineVariant: 'rgb(216, 194, 191)',
    shadow: 'rgb(0, 0, 0)',
    scrim: 'rgb(0, 0, 0)',
    inverseSurface: 'rgb(54, 47, 46)',
    inverseOnSurface: 'rgb(251, 238, 236)',
    inversePrimary: 'rgb(255, 180, 170)',
    elevation: {
      level0: 'transparent',
      level1: 'rgb(252, 238, 243)',
      level2: 'rgb(250, 231, 236)',
      level3: 'rgb(248, 223, 229)',
      level4: 'rgb(247, 221, 226)',
      level5: 'rgb(246, 216, 221)',
    },
    surfaceDisabled: 'rgba(32, 26, 25, 0.12)',
    onSurfaceDisabled: 'rgba(32, 26, 25, 0.38)',
    backdrop: 'rgba(59, 45, 43, 0.4)',
  },
};

const themeDark: ThemeProp = {
  dark: true,
  version: 3,
  mode: 'exact',
  colors: {
    primary: 'rgb(255, 180, 170)',
    onPrimary: 'rgb(105, 0, 4)',
    primaryContainer: 'rgb(147, 0, 9)',
    onPrimaryContainer: 'rgb(255, 218, 213)',
    secondary: 'rgb(231, 180, 255)',
    onSecondary: 'rgb(74, 23, 101)',
    secondaryContainer: 'rgb(98, 48, 125)',
    onSecondaryContainer: 'rgb(246, 217, 255)',
    tertiary: 'rgb(255, 183, 133)',
    onTertiary: 'rgb(80, 37, 0)',
    tertiaryContainer: 'rgb(113, 55, 0)',
    onTertiaryContainer: 'rgb(255, 220, 198)',
    error: 'rgb(255, 180, 171)',
    onError: 'rgb(105, 0, 5)',
    errorContainer: 'rgb(147, 0, 10)',
    onErrorContainer: 'rgb(255, 180, 171)',
    background: 'rgb(32, 26, 25)',
    onBackground: 'rgb(237, 224, 222)',
    surface: 'rgb(32, 26, 25)',
    onSurface: 'rgb(237, 224, 222)',
    surfaceVariant: 'rgb(83, 67, 65)',
    onSurfaceVariant: 'rgb(216, 194, 191)',
    outline: 'rgb(160, 140, 138)',
    outlineVariant: 'rgb(83, 67, 65)',
    shadow: 'rgb(0, 0, 0)',
    scrim: 'rgb(0, 0, 0)',
    inverseSurface: 'rgb(237, 224, 222)',
    inverseOnSurface: 'rgb(54, 47, 46)',
    inversePrimary: 'rgb(192, 0, 15)',
    elevation: {
      level0: 'transparent',
      level1: 'rgb(43, 34, 32)',
      level2: 'rgb(50, 38, 37)',
      level3: 'rgb(57, 43, 41)',
      level4: 'rgb(59, 45, 42)',
      level5: 'rgb(63, 48, 45)',
    },
    surfaceDisabled: 'rgba(237, 224, 222, 0.12)',
    onSurfaceDisabled: 'rgba(237, 224, 222, 0.38)',
    backdrop: 'rgba(59, 45, 43, 0.4)',
  },
};

export default DefaultTheme;
